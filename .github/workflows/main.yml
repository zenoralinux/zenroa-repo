name: Update Repo Databases

on:
  workflow_dispatch:
  schedule:
    - cron: "30 3 * * *"

permissions:
  contents: write

concurrency:
  group: update-repo-dbs
  cancel-in-progress: false

jobs:
  update-db:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]

    env:
      REPO_NAME: "zenroa-repo"
      ARCH_DIR: ${{ matrix.arch }}

    steps:
      - name: Install required tools
        run: |
          pacman -Syu --noconfirm --needed pacman-contrib libarchive curl jq

      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Download packages from release
        run: |
          mkdir -p "repo/$ARCH_DIR"
          cd "repo/$ARCH_DIR"
          
          # Get download URLs for packages
          api_url="https://api.github.com/repos/${{ github.repository }}/releases/tags/$ARCH_DIR"
          assets=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$api_url" | jq -r '.assets[] | select(.name | endswith(".pkg.tar.zst")) | .url')
          
          for asset_url in $assets; do
            echo "Downloading $asset_url"
            curl -sLH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/octet-stream" \
                 "$asset_url" -O
          done

      - name: Build pacman database
        id: builddb
        run: |
          set -euo pipefail
          cd "repo/$ARCH_DIR"

          rm -f "$REPO_NAME".db* "$REPO_NAME".files*
          shopt -s nullglob
          pkgs=( *.pkg.tar.* )

          if [ ${#pkgs[@]} -eq 0 ]; then
            echo "No packages found for $ARCH_DIR."
            echo "has_packages=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          repo-add -n -R "$REPO_NAME".db.tar.gz "${pkgs[@]}"
          mv -f "$REPO_NAME".db.tar.gz "$REPO_NAME".db
          mv -f "$REPO_NAME".files.tar.gz "$REPO_NAME".files

          echo "has_packages=true" >> "$GITHUB_OUTPUT"

      - name: Upload only database files to release
        if: steps.builddb.outputs.has_packages == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ env.ARCH_DIR }}
          files: |
            repo/${{ env.ARCH_DIR }}/${{ env.REPO_NAME }}.db
            repo/${{ env.ARCH_DIR }}/${{ env.REPO_NAME }}.files
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
