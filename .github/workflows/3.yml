name: Publish Arch Repo to GitHub Releases (fixed tag, multi-arch)

on:
  workflow_dispatch:
    inputs:
      source_repo_url:
        description: "Upstream repo with built packages (e.g., Codeberg)"
        required: true
        default: "https://codeberg.org/zenoralinux/zenora-repo.git"
      source_branch:
        description: "Source branch"
        required: true
        default: "main"
      repo_name:
        description: "Pacman repo/db name (MUST match pacman.conf section on clients)"
        required: true
        default: "zrepo"
      release_tag:
        description: "Fixed release tag to upload assets to"
        required: true
        default: "repository"
  schedule:
    - cron: "30 3 * * *"    # 03:30 UTC daily

permissions:
  contents: write

concurrency:
  group: publish-arch-repo
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    strategy:
      fail-fast: false
      matrix:
        arch_dir: [x86_64, aarch64]  # اگر فقط یکی را می‌خواهید، همینجا کم/زیاد کنید

    env:
      REPO_NAME: ${{ github.event.inputs.repo_name }}
      SRC_URL: ${{ github.event.inputs.source_repo_url }}
      SRC_BRANCH: ${{ github.event.inputs.source_branch }}
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
      ARCH_DIR: ${{ matrix.arch_dir }}

    steps:
      - name: Install base tools (inside Arch container)
        run: |
          set -eux
          pacman -Syu --noconfirm --needed git base-devel libarchive ca-certificates
          update-ca-trust

      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch source packages
        run: |
          set -eux
          git clone --depth 1 --branch "$SRC_BRANCH" "$SRC_URL" src
          test -d "src" && ls -la src || true
          test -d "src/$ARCH_DIR" && ls -la "src/$ARCH_DIR" || echo "No src/$ARCH_DIR folder."

      - name: Prepare repo structure
        run: |
          set -euo pipefail
          mkdir -p "repo/$ARCH_DIR"
          if compgen -G "src/$ARCH_DIR/*.pkg.tar.*" > /dev/null; then
            cp -f src/$ARCH_DIR/*.pkg.tar.* "repo/$ARCH_DIR/" || true
          fi

      - name: Build pacman database (repo-add)
        id: builddb
        run: |
          set -euo pipefail
          cd "repo/$ARCH_DIR"

          shopt -s nullglob
          pkgs=( *.pkg.tar.* )

          if [ ${#pkgs[@]} -eq 0 ]; then
            echo "No packages found for $ARCH_DIR. Skipping DB build for this arch."
            echo "has_files=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          rm -f "$REPO_NAME".db* "$REPO_NAME".files*

          # Build DB
          repo-add -n -R "$REPO_NAME".db.tar.gz "${pkgs[@]}"

          # Keep BOTH compressed and uncompressed-named copies (no symlink)
          mv -f "$REPO_NAME".db.tar.gz    "$REPO_NAME".db
          mv -f "$REPO_NAME".files.tar.gz "$REPO_NAME".files

          echo "== DB outputs =="
          ls -lh "$REPO_NAME".db* "$REPO_NAME".files*

          echo "has_files=true" >> "$GITHUB_OUTPUT"

      - name: List repo outputs
        run: |
          set -e
          echo "Workspace: $GITHUB_WORKSPACE"
          echo "---- repo tree ----"
          ls -lahR repo || true
          echo "---- expected files in repo/$ARCH_DIR ----"
          find "repo/$ARCH_DIR" -maxdepth 1 -type f -print || true

      - name: Upload assets to fixed tag
        if: steps.builddb.outputs.has_files == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          release_name: "Package repository (rolling)"
          body: "Automated publish for ${{ env.REPO_NAME }} / ${{ env.ARCH_DIR }}"
          file_glob: true
          overwrite: true
          file: |
            ${{ github.workspace }}/repo/${{ env.ARCH_DIR }}/*
