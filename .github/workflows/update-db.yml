name: Update Arch Repo DB Only (fixed tag, multi-arch)

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: "Pacman repo/db name (must match client pacman.conf section)"
        required: true
        default: "zrepo"
  schedule:
    - cron: "30 3 * * *"  # 03:30 UTC daily

permissions:
  contents: write

concurrency:
  group: update-arch-repo-db
  cancel-in-progress: false

jobs:
  update-db:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    strategy:
      fail-fast: false
      matrix:
        arch_dir: [x86_64, aarch64]

    env:
      REPO_NAME: ${{ github.event.inputs.repo_name }}
      ARCH_DIR: ${{ matrix.arch_dir }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # برای gh لازم است

    steps:
      - name: Install base tools (inside Arch container)
        run: |
          set -eux
          pacman -Syu --noconfirm --needed git base-devel libarchive ca-certificates github-cli jq
          update-ca-trust

      - name: Checkout this repo (for workspace)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare workspace
        run: |
          set -euo pipefail
          mkdir -p "repo/$ARCH_DIR"

      # دانلود فقط پکیج‌ها از Release با تگ برابر معماری
      - name: Download packages from release tag (= arch)
        id: dl
        run: |
          set -euo pipefail
          # تلاش برای دانلود فقط *.pkg.tar.* از تگ مربوط به معماری
          if gh release view "$ARCH_DIR" >/dev/null 2>&1; then
            gh release download "$ARCH_DIR" \
              --pattern "*.pkg.tar.*" \
              --dir "repo/$ARCH_DIR" \
              --clobber || true
          else
            echo "No release tag named ${ARCH_DIR} found."
          fi

          # چک وجود پکیج‌ها
          shopt -s nullglob
          pkgs=( repo/"$ARCH_DIR"/*.pkg.tar.* )
          if [ ${#pkgs[@]} -eq 0 ]; then
            echo "no_pkgs=true" >> "$GITHUB_OUTPUT"
            echo "No package files found in release ${ARCH_DIR}. Skipping DB build."
          else
            echo "no_pkgs=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build pacman database (repo-add)
        if: steps.dl.outputs.no_pkgs == 'false'
        id: builddb
        run: |
          set -euo pipefail
          cd "repo/$ARCH_DIR"

          # پاکسازی نسخه‌های قبلی دیتابیس داخل workspace
          rm -f "$REPO_NAME".db* "$REPO_NAME".files*

          # ساخت دیتابیس
          repo-add -n -R "$REPO_NAME".db.tar.gz ./*.pkg.tar.*

          # نگه داشتن کپی بدون پسوند tar.gz (بدون symlink)
          mv -f "$REPO_NAME".db.tar.gz    "$REPO_NAME".db
          mv -f "$REPO_NAME".files.tar.gz "$REPO_NAME".files

          echo "== DB outputs =="
          ls -lh "$REPO_NAME".db "$REPO_NAME".files

      - name: List repo outputs
        if: steps.dl.outputs.no_pkgs == 'false'
        run: |
          set -e
          echo "---- repo tree ----"
          ls -lahR repo || true
          echo "---- expected DB files in repo/$ARCH_DIR ----"
          ls -l "repo/$ARCH_DIR/$REPO_NAME".db "repo/$ARCH_DIR/$REPO_NAME".files

      # آپلود فقط فایل‌های DB به همان تگ (برابر معماری)
      - name: Upload DB assets to fixed tag per arch
        if: steps.dl.outputs.no_pkgs == 'false'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.ARCH_DIR }}
          release_name: "Package repository (rolling) ${{ env.ARCH_DIR }}"
          body: "Automated DB update for ${{ env.REPO_NAME }} / ${{ env.ARCH_DIR }}"
          file_glob: false
          overwrite: true
          file: |
            ${{ github.workspace }}/repo/${{ env.ARCH_DIR }}/${{ env.REPO_NAME }}.db
            ${{ github.workspace }}/repo/${{ env.ARCH_DIR }}/${{ env.REPO_NAME }}.files
