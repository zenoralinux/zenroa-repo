name: Update Arch Repo DB Only

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: "Pacman repo/db name (MUST match pacman.conf section on clients)"
        required: true
        default: "zrepo"
      release_tag:
        description: "Release tag to download packages from (usually arch name)"
        required: true
        default: "x86_64"

permissions:
  contents: write

concurrency:
  group: update-db-only
  cancel-in-progress: false

jobs:
  update-db:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    env:
      REPO_NAME: ${{ github.event.inputs.repo_name }}
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}

    steps:
      - name: Install base tools (including gh CLI)
        run: |
          pacman -Syu --noconfirm --needed git base-devel libarchive wget github-cli

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Authenticate gh CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Download current packages from release
        run: |
          set -eux
          mkdir -p "repo/$RELEASE_TAG"
          cd "repo/$RELEASE_TAG"
          
          gh release download "$RELEASE_TAG" \
            --pattern "*.pkg.tar.*" \
            --dir "." \
            --clobber

      - name: Rebuild database
        run: |
          set -euo pipefail
          cd "repo/$RELEASE_TAG"

          shopt -s nullglob
          pkgs=( *.pkg.tar.* )

          if [ ${#pkgs[@]} -eq 0 ]; then
            echo "No packages found. Exiting."
            exit 1
          fi

          rm -f "$REPO_NAME".db* "$REPO_NAME".files*
          repo-add -n -R "$REPO_NAME".db.tar.gz "${pkgs[@]}"
          mv -f "$REPO_NAME".db.tar.gz    "$REPO_NAME".db
          mv -f "$REPO_NAME".files.tar.gz "$REPO_NAME".files

      - name: Upload updated DB files
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          release_name: "Package repository (rolling) ${{ env.RELEASE_TAG }}"
          body: "Automated DB update for ${{ env.REPO_NAME }} / ${{ env.RELEASE_TAG }}"
          file_glob: true
          overwrite: true
          file: ${{ github.workspace }}/repo/${{ env.RELEASE_TAG }}/${{ env.REPO_NAME }}.*
